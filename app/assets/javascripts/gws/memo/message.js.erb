this.Gws_Memo_Message = (function () {
  function Gws_Memo_Message() {
  }

  Gws_Memo_Message.render = function () {
    $(".list-head .search").on("click", function () {
      return $(".gws-memo-search").animate({
        height: "toggle"
      }, "fast");
    });
    $(".gws-memo-search .reset").on("click", function () {
      $(".gws-memo-search input[type=text]").val("");
      return $(".gws-memo-search .search").click();
    });
    $('.cc-bcc-label').click(function () {
      $('.gws-addon-memo-member .cc-bcc').animate({
        height: 'toggle'
      }, 'fast');
      return false;
    });
    $('.add-template').change(function () {
      if ($(this).val() === "") {
        return;
      }
      if ($('#item_format').val() === "html") {
        CKEDITOR.instances['item_html'].insertText($(this).val());
      } else {
        Webmail_Mail_Form.insertText($("#item_text"), $(this).val());
      }
      return $(this).val("");
    });
    return $(".send-mdn,.ignore-mdn").on("click", function () {
      if ($(this).hasClass('disabled')) {
        return false;
      }
      return $.ajax({
        url: $(this).attr("href"),
        method: 'POST',
        dataType: 'json',
        data: {
          _method: 'put',
          authenticity_token: $('meta[name="csrf-token"]').attr('content')
        },
        beforeSend: function () {
          return $(".send-mdn,.ignore-mdn").addClass('disabled');
        },
        success: function (data) {
          SS.notice(data.notice);
          return $(".request-mdn-notice").remove();
        }
      });
    });
  };

  Gws_Memo_Message.buildForm = function (action, confirm) {
    var checked, form, i, id, len, token;
    checked = $(".list-item input:checkbox:checked").map(function () {
      return $(this).val();
    });
    if (checked.length === 0) {
      return false;
    }
    token = $('meta[name="csrf-token"]').attr("content");
    form = $("<form/>", {
      action: action,
      method: "post",
      data: {
        confirm: confirm
      }
    });
    form.append($("<input/>", {
      name: "authenticity_token",
      value: token,
      type: "hidden"
    }));
    for (i = 0, len = checked.length; i < len; i++) {
      id = checked[i];
      form.append($("<input/>", {
        name: "ids[]",
        value: id,
        type: "hidden"
      }));
    }
    return form;
  };

  return Gws_Memo_Message;

})();
